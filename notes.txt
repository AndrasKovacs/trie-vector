TODO:

- small tail optimization: only keep n elements for some n < m in the tail arrays
  and use out-of-line copy
- Drop "level" field from vector, instead recompute level with popcount from size
- Implement traversal and folding with State# threading
  - Use it to implement faster concatenation
- Add SPECIALIZED implementations for mapM_, sequence_ etc.
- Add SPECIALIZED implementations for non-method Data.Foldable functions
- Add TrieList wrapper around TrieVector, which reverses indexing, so
  we can cons instead of snoc.

- Implement variant of Vector that always has at least 1 element in tail
  (possibly make pull into master)

